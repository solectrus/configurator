##################################################################
###                   Dashboard application                    ###
##################################################################

# Domain name or IP address of your host
APP_HOST=myapp.local

# Date of commissioning of your photovoltaic system
# INSTALLATION_DATE=2024-03-01

# Password to login as administrator, required to manage settings like historical prices
ADMIN_PASSWORD=admin-password

# Interval in seconds for polling the InfluxDB
INFLUX_POLL_INTERVAL=5

# SSL redirect: Use "true" if you want to auto-redirect to https, but ensure that you have a valid SSL certificate
# and a reverse proxy in front of the app!
# In all other cases, the option must be "false"!
# FORCE_SSL=true

# Secret token to secure cookies, 128 chars long hexadecimal encoded string
SECRET_KEY_BASE=0ada8701dbd61c233ac51c1d6530eb69cc0d3a58ee4440faf1ef9aabcf3add4b44f3cd2256c040719008b0a6e57b6d4140508867b9235c147d89ca0159471b37

# Start web server Puma in single mode (recommended to reduce memory usage)
WEB_CONCURRENCY=0

# Optional: Allow iframe embedding
# FRAME_ANCESTORS=https://my-other-home-automation-software.com

# Password for the PostgreSQL database, used by the app to comunicate internally with the database
# Caution: Do not change this after the first run, otherwise the app will no longer be able to connect to the database!
POSTGRES_PASSWORD=my-secret-db-password

##################################################################
###                      Sensor mapping                        ###
##################################################################

# Where to find the data in the InfluxDB
# Each sensor must be mapped to a measurement and a field
# The format is: INFLUX_SENSOR_NAME=MEASUREMENT:FIELD
# Example: INFLUX_SENSOR_INVERTER_POWER=MY-PV:inverter_power

INFLUX_SENSOR_INVERTER_POWER=PV:inverter_power
INFLUX_SENSOR_HOUSE_POWER=PV:house_power
INFLUX_SENSOR_GRID_IMPORT_POWER=PV:grid_import_power
INFLUX_SENSOR_GRID_EXPORT_POWER=PV:grid_export_power
INFLUX_SENSOR_BATTERY_CHARGING_POWER=PV:battery_charging_power
INFLUX_SENSOR_BATTERY_DISCHARGING_POWER=PV:battery_discharging_power
INFLUX_SENSOR_BATTERY_SOC=PV:battery_soc
INFLUX_SENSOR_WALLBOX_POWER=PV:wallbox_power
INFLUX_SENSOR_CASE_TEMP=PV:case_temp
INFLUX_SENSOR_SYSTEM_STATUS=PV:system_status
INFLUX_SENSOR_SYSTEM_STATUS_OK=PV:system_status_ok
INFLUX_SENSOR_GRID_EXPORT_LIMIT=PV:grid_export_limit
INFLUX_SENSOR_INVERTER_POWER_FORECAST=FORECAST:watt
INFLUX_SENSOR_HEATPUMP_POWER=HEATPUMP:power

##################################################################
###                       MQTT Collector                       ###
##################################################################

##### MQTT Broker credentials
MQTT_HOST=my-mqtt-broker.local
MQTT_PORT=1883
MQTT_SSL=false
MQTT_USERNAME=my-mqtt-username
MQTT_PASSWORD=my-mqtt-password

##### Mappings

# Index of the mappings, starting with 0
# Example:
#
# MAPPING_0_TOPIC=example-device/0/ENERGY/INVERTER_POWER
# MAPPING_0_MEASUREMENT=EXAMPLE
# MAPPING_0_FIELD=inverter_power
#
# MAPPING_1_TOPIC=example-device/0/ENERGY/BAT_CHARGE_POWER
# MAPPING_1_MEASUREMENT=EXAMPLE
# MAPPING_1_FIELD=battery_charging_power
#
# ...
MAPPING_0_TOPIC=foo/0/inverter
MAPPING_0_MEASUREMENT=PV
MAPPING_0_FIELD=inverter_power
MAPPING_1_TOPIC=foo/0/house
MAPPING_1_MEASUREMENT=PV
MAPPING_1_FIELD=house_power
MAPPING_2_TOPIC=foo/0/grid
MAPPING_2_MEASUREMENT_POSITIVE=PV
MAPPING_2_MEASUREMENT_NEGATIVE=PV
MAPPING_2_FIELD_POSITIVE=grid_export_power
MAPPING_2_FIELD_NEGATIVE=grid_import_power
MAPPING_3_TOPIC=foo/0/grid_export_limit
MAPPING_3_MEASUREMENT=PV
MAPPING_3_FIELD=grid_export_limit
MAPPING_4_TOPIC=foo/0/battery
MAPPING_4_MEASUREMENT_POSITIVE=PV
MAPPING_4_MEASUREMENT_NEGATIVE=PV
MAPPING_4_FIELD_POSITIVE=battery_discharging_power
MAPPING_4_FIELD_NEGATIVE=battery_charging_power
MAPPING_5_TOPIC=foo/0/soc
MAPPING_5_MEASUREMENT=PV
MAPPING_5_FIELD=battery_soc
MAPPING_6_TOPIC=foo/0/wallbox
MAPPING_6_MEASUREMENT=PV
MAPPING_6_FIELD=wallbox_power
MAPPING_7_TOPIC=foo/0/heatpump
MAPPING_7_MEASUREMENT=HEATPUMP
MAPPING_7_FIELD=power
MAPPING_8_TOPIC=foo/0/case_temp
MAPPING_8_MEASUREMENT=PV
MAPPING_8_FIELD=case_temp
MAPPING_9_TOPIC=foo/0/system_status
MAPPING_9_MEASUREMENT=PV
MAPPING_9_FIELD=system_status
MAPPING_10_TOPIC=foo/0/system_status_ok
MAPPING_10_MEASUREMENT=PV
MAPPING_10_FIELD=system_status_ok

##################################################################
###                     Forecast collector                     ###
##################################################################

# API docs: https://doc.forecast.solar/doku.php?id=api:estimate

# Latitude of the plant location
FORECAST_LATITUDE=11.1

# Longitude of the plant location
FORECAST_LONGITUDE=22.2

# Plane declination: 0 (horizontal) - 90 (vertical)
# FORECAST_DECLINATION=30

# Plane azimuth: -180 ... 180 (-180 = north, -90 = east, 0 = south, 90 = west, 180 = north)
# FORECAST_AZIMUTH=20

# Installed modules power in kilowatt peak (kWp)
# FORECAST_KWP=8.4

# Optional damping factors (http://doc.forecast.solar/damping)
# FORECAST_DAMPING_MORNING=0.5
# FORECAST_DAMPING_EVENING=0
#
# Optional configuration for multiple planes
#
# Number of planes
FORECAST_CONFIGURATIONS=2
#
# Starting from 0, add params different from the values defined above
FORECAST_0_DECLINATION=33.1
FORECAST_0_AZIMUTH=44.1
FORECAST_0_KWP=5.1
#
FORECAST_1_DECLINATION=33.2
FORECAST_1_AZIMUTH=44.2
FORECAST_1_KWP=5.2
#
# FORECAST_2_DECLINATION=50
# FORECAST_2_AZIMUTH=0
# FORECAST_2_KWP=7.84
#
# FORECAST_3_DECLINATION=50
# FORECAST_3_AZIMUTH=90
# FORECAST_3_KWP=2.58
#
# Available params are:
# - FORECAST_x_LATITUDE
# - FORECAST_x_LONGITUDE
# - FORECAST_x_DECLINATION
# - FORECAST_x_AZIMUTH
# - FORECAST_x_KWP
# - FORECAST_x_DAMPING_MORNING
# - FORECAST_x_DAMPING_EVENING

# Update interval in seconds, 900s = 15 minutes, the public (and free) API allows a minimum of 900 seconds
# BEWARE: Each plane counts as one request, so if you have multiple planes, you need to multiply the interval!
FORECAST_INTERVAL=1800

# Optional API key for registered users of forecast.solar (https://doc.forecast.solar/account_models)
# FORECAST_SOLAR_APIKEY=abc123

# Measurement name for InfluxDB
FORECAST_INFLUX_MEASUREMENT=FORECAST

##################################################################
###                 InfluxDB time series database              ###
##################################################################

# InfluxDB host
INFLUX_HOST=influxdb

# InfluxDB schema (http or https)
INFLUX_SCHEMA=http

# InfluxDB port
INFLUX_PORT=8086

# Credentials for the InfluxDB, don't change after the first run!
INFLUX_ORG=solectrus
INFLUX_USERNAME=admin
INFLUX_PASSWORD=ExAmPl3PA55W0rD
INFLUX_ADMIN_TOKEN=my-super-secret-admin-token

# Set these names before first run, they can't be changed later!
INFLUX_BUCKET=solectrus

# To keep things simple, we use ONE token (INFLUX_ADMIN_TOKEN) for both writing and reading.
# For better security, you can use two separate tokens, created via the InfluxDB frontend.
INFLUX_TOKEN_WRITE=my-super-secret-admin-token
INFLUX_TOKEN_READ=my-super-secret-admin-token

# Volume path for storing the InfluxDB data
INFLUX_VOLUME_PATH=./influxdb

##################################################################
###                    PostgreSQL database                     ###
##################################################################

# Volume path for storing the PostgreSQL data
DB_VOLUME_PATH=./postgresql

##################################################################
###                 Redis in-memory database                   ###
##################################################################

# Volume path for storing the database snapshot
REDIS_VOLUME_PATH=./redis

##################################################################
###                      Backup to AWS S3                      ###
##################################################################

# Bucket name
AWS_BUCKET=my-bucket

# AWS credentials
AWS_ACCESS_KEY_ID=aws-access-key-id
AWS_SECRET_ACCESS_KEY=aws-secret

# S3 region
AWS_REGION=eu-central-1
